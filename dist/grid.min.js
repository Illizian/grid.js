/*! grid.js - v0.0.1 - 2014-05-24
Illizian (alex@alexscotton.com)
* https://github.com/Illizian/grid.js
 Licensed MIT */

var debug=!0,logger=function(a){debug&&console.log(a)},Grid=function(a,b){logger("Grid#new"),b||(b={}),a||(a="#grid-container"),this.$el=$(a),this.options={margins:10,min_columns:1,max_columns:12,min_col_width:140},$.extend(this.options,b)};Grid.prototype.init=function(){logger("Grid#init()"),$(window).on("resize.end",this.update.bind(this)),$(window).on("mousedown",this.mousedown.bind(this)),this.update()},Grid.prototype.update=function(a){logger("Grid#update()"),a||(a={}),$.extend(this.options,a),this.width=this.$el.width(),this.height=this.$el.height(),logger("Grid height: "+this.height+" width: "+this.width),this.cells=[],this.generateCells(),this.autoAssignWidgets()},Grid.prototype.generateCells=function(){logger("Grid#generateCells()");for(var a=this.$el.find(".widget").length,b=this.options.max_columns,c=Math.floor((this.width-this.options.margins)/b);c<this.options.min_col_width&&b!==this.options.min_columns;)b--,c=Math.floor((this.width-this.options.margins)/b);this.rows=Math.ceil(a/b),this.columns=b,this.cells=[],this.column_width=c,this.$el.height(this.rows*this.column_width+this.options.margins);for(var d=0;d<this.rows*this.columns;d++){var e=Math.floor(d/this.columns),f=d-e*this.columns,g=f*this.column_width+this.options.margins,h=e*this.column_width+this.options.margins;this.cells.push({row:e,col:f,x:g,y:h,w:this.column_width-this.options.margins,h:this.column_width-this.options.margins,widget:null})}},Grid.prototype.autoAssignWidgets=function(){logger("Grid#autoAssignWidgets()");var a=this.$el.find(".widget");$.each(a,function(a,b){this.cells[a].widget=new Widget(b,a,this.cells[a])}.bind(this))},Grid.prototype.getCellIndexFromCoords=function(a,b){return logger("Grid#getCellIndexFromCoords()"),_.findIndex(this.cells,function(c){return a>c.x&&a<c.x+this.column_width&&b>c.y&&b<c.y+this.column_width}.bind(this))},Grid.prototype.swapCellContents=function(a,b){logger("Grid#swapCellContents()");var c=$.extend(!0,{},this.cells[a].widget),d=$.extend(!0,{},this.cells[b].widget);this.cells[a].widget=d,this.cells[b].widget=c,this.cells[a].widget.update&&this.cells[a].widget.update({x:this.cells[a].x,y:this.cells[a].y,i:a}),this.cells[b].widget.update&&this.cells[b].widget.update({x:this.cells[b].x,y:this.cells[b].y,i:b})},Grid.prototype.mousedown=function(a){if(logger("Grid#mousedown()"),1!==a.which||!$(a.target).hasClass("widget"))return null;var b=$(a.target).data("index");logger("Clicked on #"+b),this.cells[b].widget.pickup(a)};var Widget=function(a,b,c){logger("Widget#new"),this.$el=$(a),this.x=c.x,this.y=c.y,this.w=c.w,this.h=c.h,this.i=b,this.$el.data("index",this.i),this.$el.css({top:this.y,left:this.x,height:this.h,width:this.w})};Widget.prototype.update=function(a){logger("Widget#update"),$.extend(this,a),this.$el.data("index",this.i),this.$el.css({top:this.y,left:this.x,height:this.h,width:this.w})},Widget.prototype.pickup=function(a){logger("Widget#pickup"),this.$el.addClass("dragging"),this._pickup={x:this.x,y:this.y,offsetX:a.offsetX,offsetY:a.offsetY},$(a.currentTarget).on("mousemove",this.move.bind(this)).on("mouseup",this.drop.bind(this))},Widget.prototype.move=function(a){logger("Widget#move"),this.update({x:a.pageX-this._pickup.offsetX,y:a.pageY-this._pickup.offsetY})},Widget.prototype.drop=function(a){logger("Widget#drop"),$(a.currentTarget).off("mousemove mouseup"),this.$el.removeClass("dragging"),this._pickup=null;var b=grid.getCellIndexFromCoords(a.pageX,a.pageY),c=this.i;grid.swapCellContents.bind(grid)(c,b)};